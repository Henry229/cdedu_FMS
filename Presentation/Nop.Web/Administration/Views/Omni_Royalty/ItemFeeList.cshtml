@model Nop.Admin.Models.Omni_Royalty.ItemFeeModel
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Omni_Royalty.ItemFee").Text;
}
@using (Html.BeginForm())
{

    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.Omni_Royalty.ItemFee")
        </div>
        <div class="options"><input type="button" id="confirm-invoice" class="k-button" value="@T("Admin.Omni_Royalty.Confirm")" /></div>
        <div class="options"><input type="button" id="pdf-invoice" class="k-button" value="@T("Admin.Omni_Order.PdfInvoice")" /></div>
        <div class="options"><input type="button" id="email-invoice" class="k-button" value="@T("Admin.Omni_Royalty.email")" /></div>

    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Year):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Year, Model.AvailableYearList, new { @class = "adminInput" })
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Term):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Term, Model.AvailableTermList, new { @class = "adminInput" })
            </td>
        </tr>


        <tr>

            <td class="adminTitle">
                @Html.NopLabelFor(model => model.BranchCode):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.BranchCode, Model.AvailableBranchList, new { @class = "adminInput" })

            </td>
        </tr>

        <tr>

            <td class="adminTitle">
                @Html.NopLabelFor(model => model.InvoiceNo):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.InvoiceNo, new { @class = "adminInput", @readonly = "readonly" })
                @Html.TextBox("email", null, new { @class = "adminInput", @readonly = "readonly" })
            </td>
        </tr>



        <tr>
            <td colspan="2">
                <input type="button" id="btnSearch" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>
    <p>
    </p>
    <style type="text/css">
        .k-grid table tbody .k-alt {
            background: Gainsboro;
        }

        .k-grid table tr.k-grid-edit-row {
            background: gold;
            color: black;
        }
    </style>
    <table class="adminContent">
        <tr>
            <td>
                <div id="itemsets-grid"></div>

                <script>
                    $(document).ready(function () {
                        $("#itemsets-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("GetItemFeeList", "Omni_Royalty"))",
                                        type: "POST",
                                        dataType: "json"
                                        //data: additionalData
                                    },


                                    parameterMap: function (data, operation) {
                                        if (operation != "read") {
                                            return data;
                                        } else {
                                            return {  // 조회조건을 추가
                                                Year: $('#@Html.FieldIdFor(model => model.Year)').val(),
                                                Term: $('#@Html.FieldIdFor(model => model.Term)').val(),
                                                BranchCode: $('#@Html.FieldIdFor(model => model.BranchCode)').val()
                                            };
                                            data.command.pageSize = 100;
                                        }
                                    }
                                },
                                aggregate: [{
                                    field: "Amt_Total",
                                    aggregate: "sum"
                                }],
                                autoSync: false,
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            BranchCode: { editable: false, type: "string" },
                                            Year: { editable: false, type: "string" },
                                            Term: { editable: false, type: "string" },
                                            ItemCode: { editable: false, type: "string" },
                                            ItemName: { editable: false, type: "string" },
                                            Price: { editable: false, type: "number" },
                                            Qty: { editable: false, type: "number" },
                                            Amt_Total: { editable: false, type: "number" }
                                        }
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "update") {
                                        this.read();
                                    }
                                    else if (e.type == "read") {
                                        getInvoiceNo();
                                    }
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },

                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true,
                                PageSize: 60
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [{
                                field: "BranchCode",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Branch")",
                                template: '#=getBranchName(BranchCode) #',
                                width: 170
                            }, {
                                field: "ItemCode",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Title")",
                                width: 150
                            }, {
                                field: "ItemName",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Title")",
                                footerTemplate: "<div > Total </div>",
                                width: 150
                            }, {
                                field: "Price",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Price")",
                                format: '{0:n2}', attributes: { style: "text-align:right;" },
                                width: 70
                            }, {
                                field: "Qty",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Payment")",
                                format: '{0:n2}', attributes: { style: "text-align:right;" },
                                width: 150
                            }, {
                                field: "Amt_Total",
                                title: "Total",
                                format: '{0:n2}', attributes: { style: "text-align:right;" },
                                aggregates: ["sum"],
                                footerTemplate: "<div style='float:right'>#=kendo.toString(sum, 'C')#</div>",
                                //groupFooterTemplate: "Sum: #=sum#",
                                width: 70

                            }]
                        });
                    });
                </script>

                <script type="text/javascript">

                    $(document).ready(function () {

                        $('#btnSearch').click(function () {
                            var grid = $('#itemsets-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            grid.dataSource.read();
                            return false;
                        });

                        $('#pdf-invoice').click(function (e) {
                            e.preventDefault();
                            //redirect to required URL
                            setLocation('@(Url.Action("PdfInvoiceItem", "Omni_Royalty"))?year=' + $('#@Html.FieldIdFor(model => model.Year)').val()
                                + '&term=' + $('#@Html.FieldIdFor(model => model.Term)').val() + '&branch=' + $('#@Html.FieldIdFor(model => model.BranchCode)').val());
                            return false;
                        });

                        $('#confirm-invoice').click(function (e) {
                            e.preventDefault();
                            //redirect to required URL

                            var url = "/Admin/Omni_Royalty/ConfirmInvoice";
                            var pyear = $('#@Html.FieldIdFor(model => model.Year)').val();
                            var pterm = $('#@Html.FieldIdFor(model => model.Term)').val();
                            var pbranch = $('#@Html.FieldIdFor(model => model.BranchCode)').val();
                            var ptype = 'ITEM';


                            $.post(url, { year: pyear, term: pterm, branch: pbranch, type: ptype }, function (data) {
                                if (data.length > 0) {
                                    alert(data);
                                }
                                else {
                                    getInvoiceNo();
                                }
                                false;
                            });


                            return false;
                        });


                        $('#email-invoice').click(function (e) {
                            e.preventDefault();
                            //redirect to required URL

                            var email = document.getElementById('email').value;
                            var subject = "Items Invoice "

                            window.location = 'mailto:' + email + '?subject=' + subject;
                            return true;
                        });






                    });


                    function getInvoiceNo() {
                        var url = "/Admin/Omni_Royalty/GetInvoiceNo";
                        var pyear = $('#@Html.FieldIdFor(model => model.Year)').val();
                        var pterm = $('#@Html.FieldIdFor(model => model.Term)').val();
                        var pbranch = $('#@Html.FieldIdFor(model => model.BranchCode)').val();
                        var ptype = 'ITEM';

                        $.post(url, { year: pyear, term: pterm, branch: pbranch, type: ptype }, function (data) {
                            var result = data.split("|");
                            document.getElementById('InvoiceNo').value = result[0];
                            document.getElementById('email').value = result[1];

                            false;
                        });
                    }




                    var allBranchList = [

                        @for (int i = 0; i < Model.AvailableBranchList.Count; i++)
        {
            var branch = Model.AvailableBranchList[i];
            <text>
            {
                Code: "@branch.Value",
                Name: "@branch.Text"
            }
            </text>
            if (i != Model.AvailableBranchList.Count - 1)
            {
                    <text>,</text>
            }
        }
                    ];

                    function getBranchName(branch) {
                        for (var i = 0; i < allBranchList.length; i++) {
                            if (allBranchList[i].Code == branch)
                                return allBranchList[i].Name;
                        }

                        return branch;
                    }


                    var allTermList = [

                @for (int i = 0; i < Model.AvailableTermList.Count; i++)
    {
        var term = Model.AvailableTermList[i];
        <text>
                        {
                            Code: "@term.Value",
                            Name: "@term.Text"
                        }
                        </text>
        if (i != Model.AvailableTermList.Count - 1)
        {
            <text>,</text>
        }
    }
                    ];

                    function TermDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allTermList
                            });
                    }

                    function getTermName(term) {
                        for (var i = 0; i < allTermList.length; i++) {
                            if (allTermList[i].Code == term)
                                return allTermList[i].Name;
                        }

                        return term;
                    }


                </script>
            </td>
        </tr>
    </table>
}