@model Nop.Admin.Models.Omni_Royalty.PASalesModel
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Omni_Royalty.PASales").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.Omni_Royalty.PASales")
        </div>

    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AvailableBranch):
            </td>
            <td class="adminData">
                @if (Model.is_admin)
                {
                    @Html.DropDownListFor(model => model.Branch, Model.AvailableBranch, new { @class = "adminInput" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.Branch, Model.AvailableBranch, new { @class = "adminInput", @disabled = "disabled" })
                }
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Year):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Year, Model.AvailableYear, new { @class = "adminInput" })
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Term):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Term, Model.AvailableTerm, new { @class = "adminInput" })
            </td>
        </tr>

        <tr>
            <td colspan="2">
                <input type="button" id="btnSearch" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>

    </table>
    <p>
    </p>
    <table class="adminContent">
        @Html.ValidationSummary()
        <tr>
            <td>
                <div id="grid"></div>

                <script>
                    kendo.culture("en-AU");

                    $(document).ready(function () {
                        $("#grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("GetPASalesList", "Omni_Royalty"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    update: {
                                        url: "@Html.Raw(Url.Action("PASalesUpdate", "Omni_Royalty"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("PASalesDelete", "Omni_Royalty"))",
                                        type: "POST",
                                        dataType: "json"
                                    },


                                    parameterMap: function (data, operation) {
                                        if (operation != "read") {
                                            var d = new Date(data.Purchase_Date);
                                            data.Purchase_Date = kendo.toString(new Date(d), "yyyy-MM-dd");
                                            return data;
                                        } else {
                                            var d1 = new Date($('#Purchase_Date_From').val());
                                            var d2 = new Date($('#Purchase_Date_To').val());

                                            return {


                                                Branch: $('#@Html.FieldIdFor(model => model.Branch)').val(),
                                                Year: $('#@Html.FieldIdFor(model => model.Year)').val(),
                                                Term: $('#@Html.FieldIdFor(model => model.Term)').val(),
                                                Purchase_Date_From: kendo.toString(new Date(d1), "yyyy-MM-dd"),// kendo.toString(new Date(d1), "yyyy-MM-dd"),
                                                Purchase_Date_To: kendo.toString(new Date(d2), "yyyy-MM-dd"),
                                            };
                                        }
                                    }
                                },

                                autoSync: false,
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {

                                            Branch: { editable: false, type: "string" },
                                            Year: { editable: true, type: "string", defaultValue: "@Model.Year" },
                                            Term: { editable: true, type: "string", defaultValue: "@Model.Term" },
                                            Title: { editable: false, type: "string" },
                                            Level: { editable: true, type: "string" },
                                            Price: { editable: true, type: "number" },
                                            List_Price: { editable: false, type: "number" },
                                            Diff_Price: { editable: false, type: "number" },
                                            Payment: { editable: true, type: "string" },
                                            Stud_id: { editable: false, type: "string" },
                                            Purchase_Date: { editable: false, type: "date" },
                                            Id: { editable: false, type: "number" }
                                        }
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "create" || e.type == "update") {
                                        this.read();
                                    }
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: 10000,
                                serverPaging: false,
                                serverFiltering: false,
                                serverSorting: false
                            },
                            resizable: true,

                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            sortable: {
                                mode: "single",
                                allowUnsort: false
                            },
                            scrollable: false,
                            columns: [
                            {
                                field: "Branch",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Branch")",
                                editor: SetBranchDropDownEditor,
                                template: '#=getBranchName(Branch) #',
                                width: 170,
                                filterable: false,
                                sortable:true


                            }, {
                                field: "Year",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Year")",
                                editor: SetYearDropDownEditor,
                                width: 100,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Term",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Term")",
                                editor: SetTermDropDownEditor,
                                template: '#=getTermName(Term) #',
                                width: 100,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Title",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Title")",
                                width: 250,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Level",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Level")",
                                editor: SetLevelDropDownEditor,
                                template: '#=getLevelName(Level) #',
                                width: 150,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Price",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Price")",
                                format: '{0:n2}', attributes: { style: "text-align:right;" },
                                width: 100,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "List_Price",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.List_Price")",
                                format: '{0:n2}', attributes: { style: "text-align:right;" },
                                width: 100,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Diff_Price",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Diff_Price")",
                                format: '{0:n2}', attributes: { style: "text-align:right;" },
                                width: 100,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Payment",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Payment")",
                                editor: PaymentDropDownEditor,
                                width: 100,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Stud_id",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Stud_id")",
                                width: 100,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Purchase_Date",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Purchase_Date")",
                                type: "date",
                                template: "#= kendo.toString(Purchase_Date, 'dd/MM/yyyy HH:mm:dd') #",
                                width: 200,
                                filterable: false,
                                sortable: true
                            }, {
                                field: "Id",
                                title: "@T("Admin.Omni_Backoffice.Order_PASales.Fields.Id")",
                                hidden: true,
                                filterable: false
                            }, {

                                command: [{
                                    name: "edit",
                                    text: "@T("Admin.Common.Edit")",
                                }, {
                                    name: "destroy",
                                    text: "@T("Admin.Common.Delete")"
                                }],
                                width: 300,
                                filterable: false

                            }]
                        });
                    });
                </script>

                <script type="text/javascript">

                    $(document).ready(function () {

                        $('#btnSearch').click(function () {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            grid.dataSource.read();

                        });

                        $("#Purchase_Date_From").kendoDatePicker({
                            culture: "en-AU"
                        });
                        $("#Purchase_Date_To").kendoDatePicker({
                            culture: "en-AU"
                        });

                    });



                    var allBranchList = [

                    @for (int i = 0; i < Model.AvailableBranch.Count; i++)
                    {
                        var branch = Model.AvailableBranch[i];
                        <text> { Code: "@branch.Value", Name: "@branch.Text" }  </text>
                        if (i != Model.AvailableBranch.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SetBranchDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allBranchList
                            });
                    }
                    function getBranchName(branch) {
                        for (var i = 0; i < allBranchList.length; i++) {
                            if (allBranchList[i].Code == branch)
                                return allBranchList[i].Name;
                        }

                        return branch;
                    }


                 


                    var allYearList = [

        @for (int i = 0; i < Model.AvailableYear.Count; i++)
                    {
                        var year = Model.AvailableYear[i];
                        <text> { Code: "@year.Value", Name: "@year.Text" } </text>
                        if (i != Model.AvailableYear.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SetYearDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allYearList
                            });
                    }


                    var allTermList = [

        @for (int i = 0; i < Model.AvailableTerm.Count; i++)
                    {
                        var term = Model.AvailableTerm[i];
                        <text>   { Code: "@term.Value", Name: "@term.Text" } </text>
                        if (i != Model.AvailableTerm.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SetTermDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allTermList
                            });
                    }

                    function getTermName(term) {
                        for (var i = 0; i < allTermList.length; i++) {
                            if (allTermList[i].Code == term)
                                return allTermList[i].Name;
                        }

                        return term;
                    }

                    
                    var allLevelList = [

                @for (int i = 0; i < Model.AvailableLevel.Count; i++)
                    {
                        var level = Model.AvailableLevel[i];
                        <text>
                        {
                            Code: "@level.Value",
                            Name: "@level.Text"
                        }
                        </text>
                        if (i != Model.AvailableLevel.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SetLevelDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allLevelList
                            });
                    }

                    function getLevelName(level)
                    {
                        for ( var i = 0; i < allLevelList.length; i++)
                        {
                            if ( allLevelList[i].Code == level)
                                return allLevelList[i].Name;
                        }

                        return level;
                    }












                    var YNList = [{ Code: "Y", Name: "Y" }, { Code: "N", Name: "N" }];
                    function SetYNDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: YNList
                            });
                    }



                    var paymentList = [{ Code: "bank", Name: "bank" }, { Code: "card", Name: "card" }, { Code: "bank-H.O.", Name: "bank-H.O." }];
                    function PaymentDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: paymentList
                            });
                    }





                </script>
            </td>
        </tr>
    </table>
}