@model Nop.Admin.Models.Omni_Royalty.ClosingModel
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Omni_Royalty.ClosingList").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.Omni_Royalty.ClosingList")
        </div>

    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AvailableBranch):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Branch, Model.AvailableBranch, new { @class = "adminInput" })
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Year):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Year, Model.AvailableYear, new { @class = "adminInput" })
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Term):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Term, Model.AvailableTerm, new { @class = "adminInput" })
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Type):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Type, Model.AvailableType, new { @class = "adminInput" })
            </td>
        </tr>

        <tr>
            <td colspan="2">
                <input type="button" id="btnSearch" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>

    </table>
    <p>
    </p>
    <table class="adminContent">
        @Html.ValidationSummary()
        <tr>
            <td>
                <div id="grid"></div>

                <script>
    kendo.culture("en-AU");
    $(document).ready(function () {
        $("#grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("GetClosingList", "Omni_Royalty"))",
                        type: "POST",
                        dataType: "json"
                    },
                    update: {
                        url: "@Html.Raw(Url.Action("UpdateClosing", "Omni_Royalty"))",
                        type: "POST",
                        dataType: "json"
                    },

                    parameterMap: function (data, operation) {
                        if (operation != "read") {
                            var d = new Date(data.reg_date);
                            data.reg_date = kendo.toString(new Date(d), "yyyy-MM-dd");
                            return data;
                        } else {
                            return {
                                Branch: $('#@Html.FieldIdFor(model => model.Branch)').val(),
                                Year: $('#@Html.FieldIdFor(model => model.Year)').val(),
                                Term: $('#@Html.FieldIdFor(model => model.Term)').val(),
                                Type: $('#@Html.FieldIdFor(model => model.Type)').val()
                                            };
                                        }
                                    }
                                },
                                autoSync: false,
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {

                                            Branch: { editable: false, type: "string" },
                                            Year: { editable: false, type: "string", defaultValue: "@Model.Year" },
                            Term: { editable: false, type: "string", defaultValue: "@Model.Term" },
                            Type: { editable: false, type: "string" },
                            SEQ: { editable: false, type: "number" },
                            InvoiceNo: { editable: false, type: "string" },
                            YN_Closing: { editable: true, type: "string" },
                            Amnt_adjust: { editable: true, type: "number" },
                            Amnt_Freight: { editable: true, type: "number" },
                            Remarks: { editable: true, type: "string" },
                            DueDate: { editable: true, type: "string" },
                            reg_date: { editable: false, type: "date" },
                            Id: { editable: false, type: "number" }
                        }
                    }
                },
                requestEnd: function (e) {
                    if (e.type == "create" || e.type == "update") {
                        this.read();
                    }
                },
                error: function (e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: 10000,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            },
            resizable: true,

            editable: {
                confirmation: false,
                mode: "inline"
            },
            scrollable: false,
            selectable: "row",
            columns: [
            {
                field: "Branch",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.Branch")",
                editor: SetBranchDropDownEditor,
                template: '#=getBranchName(Branch) #',
                width: 170,
                filterable: false


            }, {
                field: "Year",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.Year")",
                editor: SetYearDropDownEditor,
                width: 100,
                filterable: false
            }, {
                field: "Term",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.Term")",
                editor: SetTermDropDownEditor,
                template: '#=getTermName(Term) #',
                width: 100,
                filterable: false
            }, {
                field: "Type",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.Type")",
                editor: SettypeDropDownEditor,
                template: '#=getTypeName(Type) #',
                width: 100,
                filterable: false
            }, {
                field: "SEQ",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.SEQ")",
                width: 100,
                format: '{0:n0}',
                filterable: false
            }, {
                field: "InvoiceNo",
                title: "@T("Admin.Omni_Backoffice.Closing.List.InvoiceNo")",
                width: 100,
                filterable: false
            }, {
                field: "InvoiceNo",
                title: "Get Invoice",
                template: '<a href="/Admin/Omni_Royalty/PdfInvoice?typeyeartermbranch=#=Type##=Year##=Term##=Branch#">Click</a>',
                width: 100,
                filterable: false
            }, {
                field: "YN_Closing",
                title: "@T("Admin.Omni_Backoffice.Closing.List.YN_Closing")",
                editor: SetYNDropDownEditor,
                width: 100,
                filterable: false
            }, {
                field: "YN_Approval",
                title: "@T("Admin.Omni_Backoffice.Closing.List.YN_Approval")",
                editor: SetYNDropDownEditor2,
                width: 100,
                filterable: false
            }, {
                field: "YN_Paid",
                title: "@T("Admin.Omni_Backoffice.Closing.List.YN_Paid")",
                editor: SetYNDropDownEditor3,
                width: 100,
                filterable: false
            }, {
                field: "Amnt_adjust",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.Amnt_adjust")",
                format: '{0:n2}',
                width: 100,
                filterable: false
            }, {
                field: "Amnt_Freight",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.Amnt_Freight")",
                format: '{0:n2}',
                width: 100,
                filterable: false
            }, {
                field: "Remarks",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.Remarks")",
                width: 400,
                filterable: false
            }, {
                field: "DueDate",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.DueDate")",
                width: 150,
                filterable: false
            }, {
                field: "reg_date",
                title: "@T("Admin.Omni_Backoffice.Closing.Fields.reg_date")",
                type: "date",
                template: "#= kendo.toString(reg_date, 'dd/MM/yyyy HH:mm:dd') #",
                width: 200
            }, {
                field: "Id",
                title: "@T("Admin.Omni_Backoffice.Order.Fields.Id")",
                hidden: true,
                filterable: false
            }, {

                command: [{
                    name: "edit",
                    text: "@T("Admin.Common.Edit")",
                }],
                width: 200,
                filterable: false

            }]
        });
    });
                </script>

                <script type="text/javascript">

                    $(document).ready(function () {

                        $('#btnSearch').click(function () {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            grid.dataSource.read();

                        });



                    });



                    var allBranchList = [

                    @for (int i = 0; i < Model.AvailableBranch.Count; i++)
                    {
                        var branch = Model.AvailableBranch[i];
                        <text> { Code: "@branch.Value", Name: "@branch.Text" }  </text>
                        if (i != Model.AvailableBranch.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SetBranchDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allBranchList
                            });
                    }
                    function getBranchName(branch) {
                        for (var i = 0; i < allBranchList.length; i++) {
                            if (allBranchList[i].Code == branch)
                                return allBranchList[i].Name;
                        }

                        return branch;
                    }


                    var alltypeList = [

        @for (int i = 0; i < Model.AvailableType.Count; i++)
                    {
                        var ordertype = Model.AvailableType[i];
                        <text> { Code: "@ordertype.Value", Name: "@ordertype.Text" } </text>
                        if (i != Model.AvailableType.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SettypeDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: alltypeList
                            });
                    }
                    function getTypeName(type) {
                        for (var i = 0; i < alltypeList.length; i++) {
                            if (alltypeList[i].Code == type)
                                return alltypeList[i].Name;
                        }

                        return type;
                    }


                    var allYearList = [

        @for (int i = 0; i < Model.AvailableYear.Count; i++)
                    {
                        var year = Model.AvailableYear[i];
                        <text> { Code: "@year.Value", Name: "@year.Text" } </text>
                        if (i != Model.AvailableYear.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SetYearDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allYearList
                            });
                    }


                    var allTermList = [

        @for (int i = 0; i < Model.AvailableTerm.Count; i++)
                    {
                        var term = Model.AvailableTerm[i];
                        <text>   { Code: "@term.Value", Name: "@term.Text" } </text>
                        if (i != Model.AvailableTerm.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    function SetTermDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allTermList
                            });
                    }
                    function getTermName(term) {
                        for (var i = 0; i < allTermList.length; i++) {
                            if (allTermList[i].Code == term)
                                return allTermList[i].Name;
                        }

                        return term;
                    }

                    var YNList = [{ Code: "Y", Name: "Y" }, { Code: "N", Name: "N" }];
                    function SetYNDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: YNList
                            });
                    }

                    function SetYNDropDownEditor2(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: YNList
                            });
                    }

                    function SetYNDropDownEditor3(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:' + options.field + '"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: YNList
                            });
                    }



                </script>
            </td>
        </tr>
    </table>
}