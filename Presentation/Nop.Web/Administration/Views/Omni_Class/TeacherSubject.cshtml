@model Nop.Admin.Models.Omni_Class.TeacherSubjectModel
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Omni_Class.TeacherSubject").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.Omni_Class.TeacherSubject")
            <a href="javascript:history.go(-1)">(Back to teacher list)</a>
        </div>
    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Teacher_Id):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.Teacher_Id, new { @readonly = "readonly" })
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.Label("Teacher");
            </td>
            <td class="adminData">
                @Html.TextBox("teachername", Model.Title + Model.FirstName + " " + Model.LastName, new { @readonly = "readonly" })
            </td>
        </tr>
    </table>
    <p>
    </p>
    <table class="adminContent">
        <tr>
            <td>
                <div id="grid"></div>





                <script>
                    $(document).ready(function () {
                        $("#grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("GetTeacherSubjectList", "Omni_Class"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    create: {
                                        url: "@Html.Raw(Url.Action("TeacherSubjectInsert", "Omni_Class"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    update: {
                                        url:"@Html.Raw(Url.Action("TeacherSubjectUpdate", "Omni_Class"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("TeacherSubjectDelete", "Omni_Class"))",
                                        type: "POST",
                                        dataType: "json"
                                    },
                                    parameterMap: function(data, operation) {
                                        if (operation != "read") {

                                            return data;
                                        } else {
                                            return {
                                                Teacher_Id:  $('#@Html.FieldIdFor(model => model.Teacher_Id)').val()
                                            };
                                        }
                                    }
                                },
                                autoSync:false,
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id",
                                        fields: {
                                            Teacher_Id : { editable: false, type: "number" ,defaultValue : "@Model.Teacher_Id"  },
                                            Subject : { editable: false, type: "string" },
                                            Check : { editable: true, type: "boolean" },
                                        }
                                    }
                                },
                                requestEnd: function (e) {
                                    if (e.type == "create" || e.type == "update") {
                                        this.read();
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(gridPageSize),
                                serverPaging: true,
                                serverFiltering: false,
                                serverSorting: false
                            },
                            resizable : true,
                            pageable: {
                                refresh: true
                            },


                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [{
                                field: "Teacher_Id",
                                title: "@T("Admin.Omni_Backoffice.TeacherSubject.Fields.Teacher_Id")",
                                hidden:true

                            }, {
                                field: "Subject",
                                title: "@T("Admin.Omni_Backoffice.TeacherSubject.Fields.Subject")",
                                editor : SubjectDropDownEditor,
                                template: '#=getSubjectName(Subject) #',
                                width: 60
                            }, {
                                field: "Check",
                                title: "@T("Admin.Omni_Backoffice.TeacherSubject.Fields.Check")",
                                template: '#=getCheckYN(Check) #',
                                width: 60
                            }, {
                                field: "Id",
                                title: "@T("Admin.Omni_Backoffice.TeacherCareer.Fields.Id")",
                                hidden : true
                            },

                            {

                                command: [{
                                    name: "edit",
                                    text: "@T("Admin.Common.Edit")",
                                }],
                                width: 200,
                                filterable:false

                            }

                            ]
                        });
                    });
                </script>

                <script type="text/javascript">

                    $(document).ready(function () {

                        $('#btnSearch').click(function () {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            grid.dataSource.read();
                            return false;
                        });


                    });





                    var allSubjectList = [

        @for (int i = 0; i < Model.AvailableSubject.Count; i++)
                    {
                        var item = Model.AvailableSubject[i];
                        <text> { Code: "@item.Value", Name: "@item.Text" } </text>
                        if (i != Model.AvailableSubject.Count - 1)
                        { <text>,</text> }
                    }
                    ];

                    function SubjectDropDownEditor(container, options) {
                        $('<input required data-text-field="Name" data-value-field="Code" data-bind="value:'+options.field+'"/>')
                            .appendTo(container)
                            .kendoDropDownList({
                                autoBind: false,
                                dataSource: allSubjectList
                            });
                    }

                    function getSubjectName(subject)
                    {
                        for ( var i = 0; i < allSubjectList.length; i++)
                        {
                            if ( allSubjectList[i].Code == subject)
                                return allSubjectList[i].Name;
                        }

                        return subject;
                    }

                    function getCheckYN(check)
                    {
                        if ( check )
                            return "Y";
                        else return "N";
                    }

                </script>
            </td>
        </tr>
    </table>
}