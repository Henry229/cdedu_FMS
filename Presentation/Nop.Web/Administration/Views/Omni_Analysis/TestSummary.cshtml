@model Nop.Admin.Models.Omni_Analysis.TestSummaryModel
@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;

    //page title
    ViewBag.Title = T("Admin.Omni_Royalty.TestSummary").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Admin.Omni_Analysis.TestSummary")
        </div>

    </div>
    <table style="widows:inherit">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Year1):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Year1, Model.AvailableYear1, new { @class = "adminInput" })
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Year2):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Year2, Model.AvailableYear2, new { @class = "adminInput" })
            </td>
        </tr>
        
        <tr>
            <td colspan="2">
                <input type="button" id="btnSearch" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>

    </table>
    <p>
    </p>
    <table class="adminContent">
        @Html.ValidationSummary()
        <tr>
            <td>
                <div id="js-legend" class="chart-legend"></div>
                <canvas id="myChart" width="800" height="400"></canvas>
                
                <script src="/Scripts/Chart.min.js"></script>
                <style>
                    .chart-legend li span {
                        display: inline-block;
                        width: 12px;
                        height: 12px;
                        margin-right: 5px;
                    }

                    .chart-legend ul {
                        list-style-type: none;
                    }
                </style>

                <script type="text/javascript">

    $(document).ready(function () {

        $('#btnSearch').click(function () {

            drawchart();

        });



    });


    var options = {
        //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleBeginAtZero: true,

        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,

        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",

        //Number - Width of the grid lines
        scaleGridLineWidth: 1,

        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,

        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,

        //Boolean - If there is a stroke on each bar
        barShowStroke: true,

        //Number - Pixel width of the bar stroke
        barStrokeWidth: 2,

        //Number - Spacing between each of the X value sets
        barValueSpacing: 5,

        //Number - Spacing between data sets within X values
        barDatasetSpacing: 1,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

    }

    //default data
    var deflablenames = [];
    var defchartdatasets = [];
    var defdata = {
        labels: deflablenames,
        datasets: defchartdatasets
    };

    var ctx = document.getElementById("myChart").getContext("2d");

    var myBarChart = new Chart(ctx).Bar(defdata, options);

    function drawchart() {


        Chart.defaults.global.animation = true;

        

        var lablenames = [];
        var chartdatasets = [];
        for (var i = 0; i < allBranchList.length; i++)
        {
            lablenames[i] = allBranchList[i].Name;
        }

        var year1 = $('#@Html.FieldIdFor(model => model.Year1)').val();
        var year2 = $('#@Html.FieldIdFor(model => model.Year2)').val();
        $.getJSON("@Url.Action("GetTestSummaryData")" + "?year1=" + year1 + "&year2=" + year2, function (data2) {

                            var tempcnt = 0;

                            for (var i = 0; i < data2.length; i++)
                            {
                                if (i == 0) {
                                    chartdatasets[i] = {
                                        label: year1+"OC Trial Test",
                                        fillColor: "rgba(220,220,220,0.8)",
                                        strokeColor: "rgba(220,220,220,1)",
                                        highlightFill: "rgba(220,220,220,1)",
                                        highlightStroke: "rgba(220,220,220,1)",
                                        data: data2[i]
                                    };
                                }
                                if (i == 1) {
                                    chartdatasets[i] = {
                                        label: year2+"OC Trial Test",
                                        fillColor: "rgba(151,187,205,0.8)",
                                        strokeColor: "rgba(151,187,205,1)",
                                        highlightFill: "rgba(151,187,205,1)",
                                        highlightStroke: "rgba(151,187,205,1)",
                                        data: data2[i]
                                    };
                                }
                                if (i == 2) {
                                    chartdatasets[i] = {
                                        label: year1+"Selective Trial Test",
                                        fillColor: "rgba(205,187,100,0.8)",
                                        strokeColor: "rgba(205,187,100,1)",
                                        highlightFill: "rgba(205,187,100,1)",
                                        highlightStroke: "rgba(205,187,100,1)",
                                        data: data2[i]
                                    };
                                }
                                if (i == 3) {
                                    chartdatasets[i] = {
                                        label: year2+"Selective Trial Test",
                                        fillColor: "rgba(205,187,205,0.8)",
                                        strokeColor: "rgba(205,187,205,1)",
                                        highlightFill: "rgba(205,187,205,1)",
                                        highlightStroke: "rgba(205,187,205,1)",
                                        data: data2[i]
                                    };
                                }
                            }


                            var data = {
                                labels: lablenames,
                                datasets: chartdatasets
                            };

                            

                            myBarChart.clear();
                            myBarChart.destroy();
                            myBarChart = new Chart(ctx).Bar(data, options);
                            var legend = myBarChart.generateLegend();

                            document.getElementById("js-legend").innerHTML = legend;
                            myBarChart.update();

                        });

                    }



                    var allBranchList = [

                    @for (int i = 0; i < Model.AvailableBranch.Count; i++)
                    {
                        var branch = Model.AvailableBranch[i];
                        <text> { Code: "@branch.Value", Name: "@branch.Text" }  </text>
                        if (i != Model.AvailableBranch.Count - 1)
                        {
                            <text>,</text>
                        }
                    }
                    ];

                    
                </script>
            </td>
        </tr>
    </table>
}